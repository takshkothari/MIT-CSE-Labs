$date
	Thu Sep 15 11:19:07 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module q4_tb $end
$var wire 1 ! s3 $end
$var wire 1 " s2 $end
$var wire 1 # s1 $end
$var wire 1 $ s0 $end
$var reg 1 % cin $end
$var reg 1 & x0 $end
$var reg 1 ' x1 $end
$var reg 1 ( x2 $end
$var reg 1 ) x3 $end
$var reg 1 * y0 $end
$var reg 1 + y1 $end
$var reg 1 , y2 $end
$var reg 1 - y3 $end
$scope module add $end
$var wire 1 % cin $end
$var wire 1 . co $end
$var wire 1 / t1 $end
$var wire 1 0 t2 $end
$var wire 1 & x0 $end
$var wire 1 ' x1 $end
$var wire 1 ( x2 $end
$var wire 1 ) x3 $end
$var wire 1 * y0 $end
$var wire 1 + y1 $end
$var wire 1 , y2 $end
$var wire 1 - y3 $end
$var wire 1 1 st3 $end
$var wire 1 2 st2 $end
$var wire 1 3 st1 $end
$var wire 1 4 st0 $end
$var wire 1 ! s3 $end
$var wire 1 " s2 $end
$var wire 1 # s1 $end
$var wire 1 $ s0 $end
$var wire 1 5 cout $end
$var wire 1 6 c $end
$scope module stage0 $end
$var wire 1 % cin $end
$var wire 1 & x0 $end
$var wire 1 ' x1 $end
$var wire 1 ( x2 $end
$var wire 1 ) x3 $end
$var wire 1 * y0 $end
$var wire 1 + y1 $end
$var wire 1 , y2 $end
$var wire 1 - y3 $end
$var wire 1 1 s3 $end
$var wire 1 2 s2 $end
$var wire 1 3 s1 $end
$var wire 1 4 s0 $end
$var wire 1 5 cout $end
$var wire 1 7 c3 $end
$var wire 1 8 c2 $end
$var wire 1 9 c1 $end
$scope module stage0 $end
$var wire 1 & a $end
$var wire 1 * b $end
$var wire 1 % cin $end
$var wire 1 9 cout $end
$var wire 1 4 s $end
$upscope $end
$scope module stage1 $end
$var wire 1 ' a $end
$var wire 1 + b $end
$var wire 1 9 cin $end
$var wire 1 8 cout $end
$var wire 1 3 s $end
$upscope $end
$scope module stage2 $end
$var wire 1 ( a $end
$var wire 1 , b $end
$var wire 1 8 cin $end
$var wire 1 7 cout $end
$var wire 1 2 s $end
$upscope $end
$scope module stage3 $end
$var wire 1 ) a $end
$var wire 1 - b $end
$var wire 1 7 cin $end
$var wire 1 5 cout $end
$var wire 1 1 s $end
$upscope $end
$upscope $end
$scope module stage1 $end
$var wire 1 : cin $end
$var wire 1 4 x0 $end
$var wire 1 3 x1 $end
$var wire 1 2 x2 $end
$var wire 1 1 x3 $end
$var wire 1 ; y0 $end
$var wire 1 . y1 $end
$var wire 1 . y2 $end
$var wire 1 < y3 $end
$var wire 1 ! s3 $end
$var wire 1 " s2 $end
$var wire 1 # s1 $end
$var wire 1 $ s0 $end
$var wire 1 6 cout $end
$var wire 1 = c3 $end
$var wire 1 > c2 $end
$var wire 1 ? c1 $end
$scope module stage0 $end
$var wire 1 4 a $end
$var wire 1 ; b $end
$var wire 1 : cin $end
$var wire 1 ? cout $end
$var wire 1 $ s $end
$upscope $end
$scope module stage1 $end
$var wire 1 3 a $end
$var wire 1 . b $end
$var wire 1 ? cin $end
$var wire 1 > cout $end
$var wire 1 # s $end
$upscope $end
$scope module stage2 $end
$var wire 1 2 a $end
$var wire 1 . b $end
$var wire 1 > cin $end
$var wire 1 = cout $end
$var wire 1 " s $end
$upscope $end
$scope module stage3 $end
$var wire 1 1 a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 6 cout $end
$var wire 1 ! s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0?
1>
1=
0<
0;
0:
09
08
17
16
05
14
13
02
11
10
0/
1.
0-
1,
0+
0*
0)
1(
1'
1&
0%
1$
0#
0"
0!
$end
#20
1"
1>
1/
0#
1.
12
0$
10
18
19
13
04
1+
1*
#40
